- name: Vérification de la présence d'un certificat
  routeros_command:
    commands:
          - /certificate print count-only where name="h9999_CA"
  register: certificates

- name: Génération et export du certificate authority
  routeros_command:
    commands:
         - /certificate add name=ca-template common-name={{ ippubopenstack }} country={{ country }} state={{ state }} locality={{ locality }} days-valid={{ days_valid }} key-usage=key-cert-sign,crl-sign
         - /certificate sign ca-template ca-crl-host={{ ip_chr }} name="{{ id_client}}_CA"
         - /certificate set "{{ id_client}}_CA" trusted=yes
         - /certificate export-certificate "{{ id_client}}_CA"
  when: "'0' in {{certificates}}"

- name: Vérification de la singature du certificat
  routeros_command:
    commands:
          - /certificate print count-only where name="ca-template"
  register: certificates

- name: Example using fail and when together
  fail:
    msg: The system may not be provisioned according to the CMDB status.
  when: certificates.stdout == "0"

- name: Création du certificat serveur
  community.routeros.command:
    commands:
          - /certificate add name="{{ id_client}}_server-template" common-name={{ ippubopenstack }} days-valid={{ days_valid }}
          - /certificate sign "{{ id_client}}_server-template" ca="{{ id_client}}_CA" name={{ ippubopenstack }}
          - /certificate set server trusted=yes
  when: certificates.stdout == "1"
#- name: Range et règle de firewall
# community.routeros.command:
            #commands:
            #- /ip pool add name=openvpn ranges={{ ip_range }}
            #- /ip firewall nat add action=masquerade chain=srcnat out-interface=ether2 src-address={{ ip_subnet }}
            #- /ip firewall nat add action=masquerade chain=srcnat out-interface=ether3 src-address={{ ip_subnet }}

            #- name: Run multiple commands and evaluate the output
            #community.routeros.command:
            #commands:
            #- /ppp profile add local-address={{ vpn_gw }} name={{ name }} remote-address={{ remote_address }} use-compression={{ use_compression }} use-encryption={{ use_encryption }} use-ipv6={{ use_ipv6 }} use-mpls={{ use_mpls }}
            #- /interface ovpn-server server set auth=sha1 cipher=aes256 default_profile=openvpn require-client-certificate=yes enabled=yes certificate={{ ippubopenstack }}
